require('dotenv').config();
const express = require('express');
const cors = require('cors');
const connection = require('./db');

const app = express();
const PORT = process.env.PORT || 3001;

// ‚úÖ ‡πÉ‡∏ä‡πâ Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// ‚úÖ ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
app.get('/', (req, res) => {
    res.send(`
        <h1>üìå ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h1>

        <h2>‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (POST)</h2>
        <form action="/create" method="POST">
            <label for="name">‡∏ä‡∏∑‡πà‡∏≠:</label>
            <input type="text" name="name" required /><br><br>

            <label for="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</label>
            <input type="email" name="email" required /><br><br>

            <button type="submit">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
        </form>

        <h2>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (PUT)</h2>
        <form action="/update" method="POST">
            <label for="id">ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</label>
            <input type="number" name="id" required /><br><br>

            <label for="name">‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà:</label>
            <input type="text" name="name" required /><br><br>

            <label for="email">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà:</label>
            <input type="email" name="email" required /><br><br>

            <button type="submit">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
        </form>

        <h2>‚ùå ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (DELETE)</h2>
        <form onsubmit="deleteUser(event)">
            <label for="deleteId">ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</label>
            <input type="number" id="deleteId" required />
            <button type="submit">‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
        </form>

        <h2>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
        <button onclick="fetchUsers()">‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</button>

        <p>
            üåê <strong>API ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong><br>
            üîπ <a href="/api/users" target="_blank">GET /api/users</a><br>
            üîπ 
        </p>

        <table border="1" id="userTable" style="margin-top: 10px; display: none;">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>‡∏ä‡∏∑‡πà‡∏≠</th>
                    <th>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        <script>
            function fetchUsers() {
                fetch('/api/users')
                    .then(response => response.json())
                    .then(data => {
                        const table = document.getElementById('userTable');
                        const tbody = table.querySelector('tbody');
                        tbody.innerHTML = "";
                        data.forEach(user => {
                            const row = document.createElement('tr');
                            row.innerHTML = \`<td>\${user.id}</td><td>\${user.name}</td><td>\${user.email}</td>\`;
                            tbody.appendChild(row);
                        });
                        table.style.display = 'table';
                    })
                    .catch(error => console.error('‚ùå Error fetching users:', error));
            }

            function deleteUser(event) {
                event.preventDefault();
                const id = document.getElementById("deleteId").value;
                fetch('/delete/' + id, { method: 'DELETE' })
                    .then(response => response.text())
                    .then(message => {
                        alert(message);
                        fetchUsers();
                    })
                    .catch(error => console.error('‚ùå Error deleting user:', error));
            }

            function showDeleteExample() {
                alert("üîπ ‡πÉ‡∏ä‡πâ API DELETE ‡πÇ‡∏î‡∏¢‡πÉ‡∏™‡πà ID: ‡πÄ‡∏ä‡πà‡∏ô /delete/1");
            }
        </script>
    `);
});



// ‚úÖ ‡πÉ‡∏ä‡πâ API /api/users (REST API)
const userRoutes = require('./routes/userRoutes');
app.use('/api/users', userRoutes);

app.listen(PORT, () => {
    console.log(`‚úÖ Server running at http://localhost:${PORT}`);
});
